diff --color -ruN include/adept/Active.h include/adept/Active.h
--- include/adept/Active.h	2020-08-21 12:01:38.000000000 -0400
+++ include/adept/Active.h	2020-12-28 21:01:06.046725293 -0500
@@ -82,7 +82,7 @@
     //   aReal x(1.0);
     template <typename PType>
     Active(const PType& rhs,
-	   typename internal::enable_if<internal::is_not_expression<PType>::value>::type* dummy = 0)
+	   typename internal::enable_if<internal::is_not_expression<PType>::value && std::is_arithmetic<PType>::value>::type* dummy = 0)
       : val_(rhs), gradient_index_(ADEPT_ACTIVE_STACK->register_gradient())
     {
       // By pushing this to the statement stack without pushing
diff --color -ruN include/adept/BinaryOperation.h include/adept/BinaryOperation.h
--- include/adept/BinaryOperation.h	2020-12-28 21:04:53.476328460 -0500
+++ include/adept/BinaryOperation.h	2020-12-28 21:04:05.824830456 -0500
@@ -1277,7 +1277,7 @@
 									\
   template<typename LType, class R>					\
   inline								\
-  typename internal::enable_if<internal::is_not_expression<LType>::value, \
+  typename internal::enable_if<internal::is_not_expression<LType>::value  && std::is_arithmetic<LType>::value, \
 			       internal::BinaryOpScalarLeft<typename internal::promote<LType, \
 										       typename R::type>::type, \
 							    LType, internal:: NAME, R> >::type \
@@ -1290,7 +1290,7 @@
 #define ADEPT_DEFINE_SCALAR_RHS_OPERATION(NAME, OPERATOR)		\
   template<class L, typename RType>					\
   inline								\
-  typename internal::enable_if<internal::is_not_expression<RType>::value, \
+  typename internal::enable_if<internal::is_not_expression<RType>::value && std::is_arithmetic<RType>::value, \
 			       internal::BinaryOpScalarRight<typename internal::promote<typename L::type, \
 											RType>::type, \
 							     L, internal:: NAME, RType> >::type \
